<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>false</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>x_clrp_serviceno_0_discord_chats</collection>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>Respond to discord chat</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous) {
  var content = (current.content + '').trim();
  if (!content.startsWith('!')) return; // Only commands

  var token = gs.getProperty('x_clrp_serviceno_0.discord_bot_token');
  var channelId = current.channel_id + '';
  if (!channelId || !token) return;

  if (content.startsWith('!incidents')) {
    sendReply(channelId, getIncidentSummary());
  } else if (content.startsWith('!help')) {
    sendReply(channelId, "**Commands:**\n`!incidents` Open incidents summary\n`!help` This help");
  } else {
    sendReply(channelId, `You said ${content}`);
  }

  function getIncidentSummary() {
    var open = 0;
    var ga = new GlideAggregate('incident');
    ga.addAggregate('COUNT');
    ga.addQuery('active', true);
    ga.query();
    if (ga.next()) open = parseInt(ga.getAggregate('COUNT'), 10) || 0;
    return `**Incident snapshot:**\nOpen: ${open}\n(generated ${gs.nowDateTime()})`;
  }

  function sendReply(channelId, message) {
    try {
      var r = new sn_ws.RESTMessageV2();
      r.setEndpoint('https://discord.com/api/v10/channels/' + channelId + '/messages');
      r.setHttpMethod('post');
      r.setRequestHeader('Authorization', 'Bot ' + token);
      r.setRequestHeader('Content-Type', 'application/json');
      r.setRequestBody(JSON.stringify({ content: message }));
      var res = r.execute();
      if (res.getStatusCode() >= 300) {
        gs.warn('Discord send failed: ' + res.getStatusCode() + ' ' + res.getBody());
      }
    } catch (e) {
      gs.error('Discord send error: ' + e.message);
    }
  }
})(current, previous);]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>chandrakant.shah</sys_created_by>
        <sys_created_on>2025-08-22 08:11:17</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>866c31c51b2f2a905f2a3377d34bcbfe</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>Respond to discord chat</sys_name>
        <sys_overrides/>
        <sys_package display_value="ServiceNow Discord Bot" source="x_clrp_serviceno_0">d541b1451beb2a905f2a3377d34bcb83</sys_package>
        <sys_policy/>
        <sys_scope display_value="ServiceNow Discord Bot">d541b1451beb2a905f2a3377d34bcb83</sys_scope>
        <sys_update_name>sys_script_866c31c51b2f2a905f2a3377d34bcbfe</sys_update_name>
        <sys_updated_by>chandrakant.shah</sys_updated_by>
        <sys_updated_on>2025-08-22 08:11:17</sys_updated_on>
        <template/>
        <when>async_always</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=866c31c51b2f2a905f2a3377d34bcbfe"/>
</record_update>
